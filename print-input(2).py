# # ---------------------------------------------------------------
# # Обучение на Python курс "Поколение Python": курс для начинающих
# # ---------------------------------------------------------------

# # import this - филосовия написания кода на пайтон


# # -----------------------------
# # Тема урока: Print - Вывод данных на экран
# # -----------------------------

# # Вывод данных на экран
# print('Hello, world!')

# # Аргументы – это конкретные значения, которые вы передаете функции при ее вызове. Команда print() позволяет указывать несколько аргументов, в таком случае их надо отделять запятыми. Приведённый ниже код:
# print('Я', 'учусь', 'программировать', 'на', 'Python!')

# # Обратите внимание, в качестве разделителя при выводе данных между аргументами команды используется символ пробела. По умолчанию команда print() добавляет ровно один пробел между всеми своими аргументами.
# print('1', '2', '4', '8', '16')

# # При написании кода между аргументами команды print() после запятой мы ставим один символ пробел. Это общепринятое соглашение в языке Python. Этот символ пробела не влияет на вывод данных. Это просто для читабельности кода.

# # Примечание 1. Команда print() записывается только маленькими буквами, другое написание недопустимо, так как в Python строчные и заглавные буквы различны.

# # Примечание 2. Каждая последующая команда print() выводит указанный текст с новой строки.

# print('Какой хороший день!')
# print()
# print('Работать мне не лень!')

# # Примечание 4. Почему в Python можно использовать как одинарные, так и двойные кавычки для обрамления текста? Ответ очень прост — часто кавычки являются частью текста. И чтобы Python мог правильно распознать такой текст, пользуемся разными:

# # Если в тексте нужны одинарные кавычки, то для обрамления такого текста используем двойные кавычки;
# # Если в тексте нужны двойные кавычки, то обрамляем его одинарными.

# print('В тексте есть "двойные" кавычки')
# print("В тексте есть 'одинарные' кавычки")

# # Обратите внимание, что в одном print() мы можем комбинировать одинарные и двойные кавычки. Это делает наш код более гибким, позволяя легко включать кавычки и апострофы в наши строки.

# print("I'm", 'the', "BAD", 'guy')

# # Примечание 6. Мы не можем использовать одинарные кавычки в строке, если саму строку обрамляем одинарными кавычками. С двойными кавычками ситуация аналогичная.


# # -----------------------------
# # Input - Вывод данных на экран
# # -----------------------------

# # Программа ждет от пользователя ввода данных. Ввод данных реализуется с помощью команды input(). И в конце произойдет вывод текста вместе с введенными от пользователя данными.

# print('Hello', input())